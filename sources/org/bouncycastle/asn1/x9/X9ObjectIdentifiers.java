package org.bouncycastle.asn1.x9;

import com.tencent.connect.common.Constants;
import org.bouncycastle.asn1.ASN1ObjectIdentifier;

/* loaded from: classes9.dex */
public interface X9ObjectIdentifiers {
    public static final ASN1ObjectIdentifier ansi_X9_42;
    public static final ASN1ObjectIdentifier ansi_X9_62;
    public static final ASN1ObjectIdentifier c2onb191v4;
    public static final ASN1ObjectIdentifier c2onb191v5;
    public static final ASN1ObjectIdentifier c2onb239v4;
    public static final ASN1ObjectIdentifier c2onb239v5;
    public static final ASN1ObjectIdentifier c2pnb163v1;
    public static final ASN1ObjectIdentifier c2pnb163v2;
    public static final ASN1ObjectIdentifier c2pnb163v3;
    public static final ASN1ObjectIdentifier c2pnb176w1;
    public static final ASN1ObjectIdentifier c2pnb208w1;
    public static final ASN1ObjectIdentifier c2pnb272w1;
    public static final ASN1ObjectIdentifier c2pnb304w1;
    public static final ASN1ObjectIdentifier c2pnb368w1;
    public static final ASN1ObjectIdentifier c2tnb191v1;
    public static final ASN1ObjectIdentifier c2tnb191v2;
    public static final ASN1ObjectIdentifier c2tnb191v3;
    public static final ASN1ObjectIdentifier c2tnb239v1;
    public static final ASN1ObjectIdentifier c2tnb239v2;
    public static final ASN1ObjectIdentifier c2tnb239v3;
    public static final ASN1ObjectIdentifier c2tnb359v1;
    public static final ASN1ObjectIdentifier c2tnb431r1;
    public static final ASN1ObjectIdentifier cTwoCurve;
    public static final ASN1ObjectIdentifier characteristic_two_field;
    public static final ASN1ObjectIdentifier dhEphem;
    public static final ASN1ObjectIdentifier dhHybrid1;
    public static final ASN1ObjectIdentifier dhHybrid2;
    public static final ASN1ObjectIdentifier dhHybridOneFlow;
    public static final ASN1ObjectIdentifier dhOneFlow;
    public static final ASN1ObjectIdentifier dhSinglePass_cofactorDH_sha1kdf_scheme;
    public static final ASN1ObjectIdentifier dhSinglePass_stdDH_sha1kdf_scheme;
    public static final ASN1ObjectIdentifier dhStatic;
    public static final ASN1ObjectIdentifier dhpublicnumber;
    public static final ASN1ObjectIdentifier ecdsa_with_SHA1;
    public static final ASN1ObjectIdentifier ecdsa_with_SHA2;
    public static final ASN1ObjectIdentifier ecdsa_with_SHA224;
    public static final ASN1ObjectIdentifier ecdsa_with_SHA256;
    public static final ASN1ObjectIdentifier ecdsa_with_SHA384;
    public static final ASN1ObjectIdentifier ecdsa_with_SHA512;
    public static final ASN1ObjectIdentifier ellipticCurve;
    public static final ASN1ObjectIdentifier gnBasis;
    public static final ASN1ObjectIdentifier id_dsa;
    public static final ASN1ObjectIdentifier id_dsa_with_sha1;
    public static final ASN1ObjectIdentifier id_ecPublicKey;
    public static final ASN1ObjectIdentifier id_ecSigType;
    public static final ASN1ObjectIdentifier id_fieldType;
    public static final ASN1ObjectIdentifier id_publicKeyType;
    public static final ASN1ObjectIdentifier mqv1;
    public static final ASN1ObjectIdentifier mqv2;
    public static final ASN1ObjectIdentifier mqvSinglePass_sha1kdf_scheme;
    public static final ASN1ObjectIdentifier ppBasis;
    public static final ASN1ObjectIdentifier prime192v1;
    public static final ASN1ObjectIdentifier prime192v2;
    public static final ASN1ObjectIdentifier prime192v3;
    public static final ASN1ObjectIdentifier prime239v1;
    public static final ASN1ObjectIdentifier prime239v2;
    public static final ASN1ObjectIdentifier prime239v3;
    public static final ASN1ObjectIdentifier prime256v1;
    public static final ASN1ObjectIdentifier primeCurve;
    public static final ASN1ObjectIdentifier prime_field;
    public static final ASN1ObjectIdentifier tpBasis;
    public static final ASN1ObjectIdentifier x9_42_schemes;
    public static final ASN1ObjectIdentifier x9_63_scheme;

    static {
        ASN1ObjectIdentifier aSN1ObjectIdentifier = new ASN1ObjectIdentifier("1.2.840.10045");
        ansi_X9_62 = aSN1ObjectIdentifier;
        ASN1ObjectIdentifier aSN1ObjectIdentifierBranch = aSN1ObjectIdentifier.branch("1");
        id_fieldType = aSN1ObjectIdentifierBranch;
        prime_field = aSN1ObjectIdentifierBranch.branch("1");
        characteristic_two_field = aSN1ObjectIdentifierBranch.branch("2");
        gnBasis = aSN1ObjectIdentifierBranch.branch("2.3.1");
        tpBasis = aSN1ObjectIdentifierBranch.branch("2.3.2");
        ppBasis = aSN1ObjectIdentifierBranch.branch("2.3.3");
        ASN1ObjectIdentifier aSN1ObjectIdentifierBranch2 = aSN1ObjectIdentifier.branch("4");
        id_ecSigType = aSN1ObjectIdentifierBranch2;
        ecdsa_with_SHA1 = new ASN1ObjectIdentifier(aSN1ObjectIdentifierBranch2 + ".1");
        ASN1ObjectIdentifier aSN1ObjectIdentifierBranch3 = aSN1ObjectIdentifier.branch("2");
        id_publicKeyType = aSN1ObjectIdentifierBranch3;
        id_ecPublicKey = aSN1ObjectIdentifierBranch3.branch("1");
        ASN1ObjectIdentifier aSN1ObjectIdentifierBranch4 = aSN1ObjectIdentifierBranch2.branch("3");
        ecdsa_with_SHA2 = aSN1ObjectIdentifierBranch4;
        ecdsa_with_SHA224 = aSN1ObjectIdentifierBranch4.branch("1");
        ecdsa_with_SHA256 = aSN1ObjectIdentifierBranch4.branch("2");
        ecdsa_with_SHA384 = aSN1ObjectIdentifierBranch4.branch("3");
        ecdsa_with_SHA512 = aSN1ObjectIdentifierBranch4.branch("4");
        ASN1ObjectIdentifier aSN1ObjectIdentifierBranch5 = aSN1ObjectIdentifier.branch("3");
        ellipticCurve = aSN1ObjectIdentifierBranch5;
        ASN1ObjectIdentifier aSN1ObjectIdentifierBranch6 = aSN1ObjectIdentifierBranch5.branch("0");
        cTwoCurve = aSN1ObjectIdentifierBranch6;
        c2pnb163v1 = aSN1ObjectIdentifierBranch6.branch("1");
        c2pnb163v2 = aSN1ObjectIdentifierBranch6.branch("2");
        c2pnb163v3 = aSN1ObjectIdentifierBranch6.branch("3");
        c2pnb176w1 = aSN1ObjectIdentifierBranch6.branch("4");
        c2tnb191v1 = aSN1ObjectIdentifierBranch6.branch("5");
        c2tnb191v2 = aSN1ObjectIdentifierBranch6.branch(Constants.VIA_SHARE_TYPE_INFO);
        c2tnb191v3 = aSN1ObjectIdentifierBranch6.branch("7");
        c2onb191v4 = aSN1ObjectIdentifierBranch6.branch(Constants.VIA_SHARE_TYPE_PUBLISHVIDEO);
        c2onb191v5 = aSN1ObjectIdentifierBranch6.branch(Constants.VIA_SHARE_TYPE_MINI_PROGRAM);
        c2pnb208w1 = aSN1ObjectIdentifierBranch6.branch(Constants.VIA_REPORT_TYPE_SHARE_TO_QQ);
        c2tnb239v1 = aSN1ObjectIdentifierBranch6.branch(Constants.VIA_REPORT_TYPE_SHARE_TO_QZONE);
        c2tnb239v2 = aSN1ObjectIdentifierBranch6.branch(Constants.VIA_REPORT_TYPE_SET_AVATAR);
        c2tnb239v3 = aSN1ObjectIdentifierBranch6.branch(Constants.VIA_REPORT_TYPE_JOININ_GROUP);
        c2onb239v4 = aSN1ObjectIdentifierBranch6.branch(Constants.VIA_REPORT_TYPE_MAKE_FRIEND);
        c2onb239v5 = aSN1ObjectIdentifierBranch6.branch(Constants.VIA_REPORT_TYPE_WPA_STATE);
        c2pnb272w1 = aSN1ObjectIdentifierBranch6.branch("16");
        c2pnb304w1 = aSN1ObjectIdentifierBranch6.branch(Constants.VIA_REPORT_TYPE_START_GROUP);
        c2tnb359v1 = aSN1ObjectIdentifierBranch6.branch("18");
        c2pnb368w1 = aSN1ObjectIdentifierBranch6.branch(Constants.VIA_ACT_TYPE_NINETEEN);
        c2tnb431r1 = aSN1ObjectIdentifierBranch6.branch("20");
        ASN1ObjectIdentifier aSN1ObjectIdentifierBranch7 = aSN1ObjectIdentifierBranch5.branch("1");
        primeCurve = aSN1ObjectIdentifierBranch7;
        prime192v1 = aSN1ObjectIdentifierBranch7.branch("1");
        prime192v2 = aSN1ObjectIdentifierBranch7.branch("2");
        prime192v3 = aSN1ObjectIdentifierBranch7.branch("3");
        prime239v1 = aSN1ObjectIdentifierBranch7.branch("4");
        prime239v2 = aSN1ObjectIdentifierBranch7.branch("5");
        prime239v3 = aSN1ObjectIdentifierBranch7.branch(Constants.VIA_SHARE_TYPE_INFO);
        prime256v1 = aSN1ObjectIdentifierBranch7.branch("7");
        id_dsa = new ASN1ObjectIdentifier("1.2.840.10040.4.1");
        id_dsa_with_sha1 = new ASN1ObjectIdentifier("1.2.840.10040.4.3");
        ASN1ObjectIdentifier aSN1ObjectIdentifier2 = new ASN1ObjectIdentifier("1.3.133.16.840.63.0");
        x9_63_scheme = aSN1ObjectIdentifier2;
        dhSinglePass_stdDH_sha1kdf_scheme = aSN1ObjectIdentifier2.branch("2");
        dhSinglePass_cofactorDH_sha1kdf_scheme = aSN1ObjectIdentifier2.branch("3");
        mqvSinglePass_sha1kdf_scheme = aSN1ObjectIdentifier2.branch("16");
        ASN1ObjectIdentifier aSN1ObjectIdentifier3 = new ASN1ObjectIdentifier("1.2.840.10046");
        ansi_X9_42 = aSN1ObjectIdentifier3;
        dhpublicnumber = aSN1ObjectIdentifier3.branch("2.1");
        ASN1ObjectIdentifier aSN1ObjectIdentifierBranch8 = aSN1ObjectIdentifier3.branch("3");
        x9_42_schemes = aSN1ObjectIdentifierBranch8;
        dhStatic = aSN1ObjectIdentifierBranch8.branch("1");
        dhEphem = aSN1ObjectIdentifierBranch8.branch("2");
        dhOneFlow = aSN1ObjectIdentifierBranch8.branch("3");
        dhHybrid1 = aSN1ObjectIdentifierBranch8.branch("4");
        dhHybrid2 = aSN1ObjectIdentifierBranch8.branch("5");
        dhHybridOneFlow = aSN1ObjectIdentifierBranch8.branch(Constants.VIA_SHARE_TYPE_INFO);
        mqv2 = aSN1ObjectIdentifierBranch8.branch("7");
        mqv1 = aSN1ObjectIdentifierBranch8.branch(Constants.VIA_SHARE_TYPE_PUBLISHVIDEO);
    }
}
